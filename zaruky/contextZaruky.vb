'------------------------------------------------------------------------------
' <auto-generated>
'     Tento kód byl generován nástrojem.
'     Verze modulu runtime:4.0.30319.18052
'
'     Změny tohoto souboru mohou způsobit nesprávné chování a budou ztraceny,
'     dojde-li k novému generování kódu.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="C:\Users\zdenek\AppData\Local\Temp\zaruky.sdf")>  _
Partial Public Class zarukyContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertDatabaze(instance As Databaze)
    End Sub
  Partial Private Sub UpdateDatabaze(instance As Databaze)
    End Sub
  Partial Private Sub DeleteDatabaze(instance As Databaze)
    End Sub
  Partial Private Sub InsertSecurity(instance As Security)
    End Sub
  Partial Private Sub UpdateSecurity(instance As Security)
    End Sub
  Partial Private Sub DeleteSecurity(instance As Security)
    End Sub
  Partial Private Sub InsertZaruky(instance As Zaruky)
    End Sub
  Partial Private Sub UpdateZaruky(instance As Zaruky)
    End Sub
  Partial Private Sub DeleteZaruky(instance As Zaruky)
    End Sub
  #End Region
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Databazes() As System.Data.Linq.Table(Of Databaze)
		Get
			Return Me.GetTable(Of Databaze)
		End Get
	End Property
	
	Public ReadOnly Property Securities() As System.Data.Linq.Table(Of Security)
		Get
			Return Me.GetTable(Of Security)
		End Get
	End Property
	
	Public ReadOnly Property Zarukies() As System.Data.Linq.Table(Of Zaruky)
		Get
			Return Me.GetTable(Of Zaruky)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class Databaze
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Jmeno As String
	
	Private _Vec As String
	
	Private _SerNum As String
	
	Private _DatPoc As String
	
	Private _DatKon As String
	
	Private _DatOpt As String
	
	Private _Dodavatel As String
	
	Private _Faktura As String
	
	Private _Cena As String
	
	Private _Optio2 As String
	
	Private _Optio3 As String
	
	Private _Optio1 As String
	
	Private _Positions As String
	
	Private _CenaOpt As String
	
	Private _Mena As String
	
	Private _Optio4 As String
	
	Private _Optio5 As String
	
	Private _OwnCheck As String
	
	Private _Active As Boolean
	
	Private _Optio1b As Boolean
	
	Private _Optio2b As Boolean
	
	Private _Optio3b As Boolean
	
	Private _Optio4b As Boolean
	
	Private _Optio5b As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnJmenoChanging(value As String)
    End Sub
    Partial Private Sub OnJmenoChanged()
    End Sub
    Partial Private Sub OnVecChanging(value As String)
    End Sub
    Partial Private Sub OnVecChanged()
    End Sub
    Partial Private Sub OnSerNumChanging(value As String)
    End Sub
    Partial Private Sub OnSerNumChanged()
    End Sub
    Partial Private Sub OnDatPocChanging(value As String)
    End Sub
    Partial Private Sub OnDatPocChanged()
    End Sub
    Partial Private Sub OnDatKonChanging(value As String)
    End Sub
    Partial Private Sub OnDatKonChanged()
    End Sub
    Partial Private Sub OnDatOptChanging(value As String)
    End Sub
    Partial Private Sub OnDatOptChanged()
    End Sub
    Partial Private Sub OnDodavatelChanging(value As String)
    End Sub
    Partial Private Sub OnDodavatelChanged()
    End Sub
    Partial Private Sub OnFakturaChanging(value As String)
    End Sub
    Partial Private Sub OnFakturaChanged()
    End Sub
    Partial Private Sub OnCenaChanging(value As String)
    End Sub
    Partial Private Sub OnCenaChanged()
    End Sub
    Partial Private Sub OnOptio2Changing(value As String)
    End Sub
    Partial Private Sub OnOptio2Changed()
    End Sub
    Partial Private Sub OnOptio3Changing(value As String)
    End Sub
    Partial Private Sub OnOptio3Changed()
    End Sub
    Partial Private Sub OnOptio1Changing(value As String)
    End Sub
    Partial Private Sub OnOptio1Changed()
    End Sub
    Partial Private Sub OnPositionsChanging(value As String)
    End Sub
    Partial Private Sub OnPositionsChanged()
    End Sub
    Partial Private Sub OnCenaOptChanging(value As String)
    End Sub
    Partial Private Sub OnCenaOptChanged()
    End Sub
    Partial Private Sub OnMenaChanging(value As String)
    End Sub
    Partial Private Sub OnMenaChanged()
    End Sub
    Partial Private Sub OnOptio4Changing(value As String)
    End Sub
    Partial Private Sub OnOptio4Changed()
    End Sub
    Partial Private Sub OnOptio5Changing(value As String)
    End Sub
    Partial Private Sub OnOptio5Changed()
    End Sub
    Partial Private Sub OnOwnCheckChanging(value As String)
    End Sub
    Partial Private Sub OnOwnCheckChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnOptio1bChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOptio1bChanged()
    End Sub
    Partial Private Sub OnOptio2bChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOptio2bChanged()
    End Sub
    Partial Private Sub OnOptio3bChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOptio3bChanged()
    End Sub
    Partial Private Sub OnOptio4bChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOptio4bChanged()
    End Sub
    Partial Private Sub OnOptio5bChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOptio5bChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Jmeno", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Jmeno() As String
		Get
			Return Me._Jmeno
		End Get
		Set
			If (String.Equals(Me._Jmeno, value) = false) Then
				Me.OnJmenoChanging(value)
				Me.SendPropertyChanging
				Me._Jmeno = value
				Me.SendPropertyChanged("Jmeno")
				Me.OnJmenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vec", DbType:="NVarChar(15)")>  _
	Public Property Vec() As String
		Get
			Return Me._Vec
		End Get
		Set
			If (String.Equals(Me._Vec, value) = false) Then
				Me.OnVecChanging(value)
				Me.SendPropertyChanging
				Me._Vec = value
				Me.SendPropertyChanged("Vec")
				Me.OnVecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SerNum", DbType:="NVarChar(15)")>  _
	Public Property SerNum() As String
		Get
			Return Me._SerNum
		End Get
		Set
			If (String.Equals(Me._SerNum, value) = false) Then
				Me.OnSerNumChanging(value)
				Me.SendPropertyChanging
				Me._SerNum = value
				Me.SendPropertyChanged("SerNum")
				Me.OnSerNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatPoc", DbType:="NVarChar(15)")>  _
	Public Property DatPoc() As String
		Get
			Return Me._DatPoc
		End Get
		Set
			If (String.Equals(Me._DatPoc, value) = false) Then
				Me.OnDatPocChanging(value)
				Me.SendPropertyChanging
				Me._DatPoc = value
				Me.SendPropertyChanged("DatPoc")
				Me.OnDatPocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatKon", DbType:="NVarChar(15)")>  _
	Public Property DatKon() As String
		Get
			Return Me._DatKon
		End Get
		Set
			If (String.Equals(Me._DatKon, value) = false) Then
				Me.OnDatKonChanging(value)
				Me.SendPropertyChanging
				Me._DatKon = value
				Me.SendPropertyChanged("DatKon")
				Me.OnDatKonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatOpt", DbType:="NVarChar(15)")>  _
	Public Property DatOpt() As String
		Get
			Return Me._DatOpt
		End Get
		Set
			If (String.Equals(Me._DatOpt, value) = false) Then
				Me.OnDatOptChanging(value)
				Me.SendPropertyChanging
				Me._DatOpt = value
				Me.SendPropertyChanged("DatOpt")
				Me.OnDatOptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dodavatel", DbType:="NVarChar(15)")>  _
	Public Property Dodavatel() As String
		Get
			Return Me._Dodavatel
		End Get
		Set
			If (String.Equals(Me._Dodavatel, value) = false) Then
				Me.OnDodavatelChanging(value)
				Me.SendPropertyChanging
				Me._Dodavatel = value
				Me.SendPropertyChanged("Dodavatel")
				Me.OnDodavatelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Faktura", DbType:="NVarChar(15)")>  _
	Public Property Faktura() As String
		Get
			Return Me._Faktura
		End Get
		Set
			If (String.Equals(Me._Faktura, value) = false) Then
				Me.OnFakturaChanging(value)
				Me.SendPropertyChanging
				Me._Faktura = value
				Me.SendPropertyChanged("Faktura")
				Me.OnFakturaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cena", DbType:="NVarChar(15)")>  _
	Public Property Cena() As String
		Get
			Return Me._Cena
		End Get
		Set
			If (String.Equals(Me._Cena, value) = false) Then
				Me.OnCenaChanging(value)
				Me.SendPropertyChanging
				Me._Cena = value
				Me.SendPropertyChanged("Cena")
				Me.OnCenaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optio2", DbType:="NVarChar(15)")>  _
	Public Property Optio2() As String
		Get
			Return Me._Optio2
		End Get
		Set
			If (String.Equals(Me._Optio2, value) = false) Then
				Me.OnOptio2Changing(value)
				Me.SendPropertyChanging
				Me._Optio2 = value
				Me.SendPropertyChanged("Optio2")
				Me.OnOptio2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optio3", DbType:="NVarChar(15)")>  _
	Public Property Optio3() As String
		Get
			Return Me._Optio3
		End Get
		Set
			If (String.Equals(Me._Optio3, value) = false) Then
				Me.OnOptio3Changing(value)
				Me.SendPropertyChanging
				Me._Optio3 = value
				Me.SendPropertyChanged("Optio3")
				Me.OnOptio3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optio1", DbType:="NVarChar(15)")>  _
	Public Property Optio1() As String
		Get
			Return Me._Optio1
		End Get
		Set
			If (String.Equals(Me._Optio1, value) = false) Then
				Me.OnOptio1Changing(value)
				Me.SendPropertyChanging
				Me._Optio1 = value
				Me.SendPropertyChanged("Optio1")
				Me.OnOptio1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Positions", DbType:="NVarChar(40)")>  _
	Public Property Positions() As String
		Get
			Return Me._Positions
		End Get
		Set
			If (String.Equals(Me._Positions, value) = false) Then
				Me.OnPositionsChanging(value)
				Me.SendPropertyChanging
				Me._Positions = value
				Me.SendPropertyChanged("Positions")
				Me.OnPositionsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CenaOpt", DbType:="NVarChar(15)")>  _
	Public Property CenaOpt() As String
		Get
			Return Me._CenaOpt
		End Get
		Set
			If (String.Equals(Me._CenaOpt, value) = false) Then
				Me.OnCenaOptChanging(value)
				Me.SendPropertyChanging
				Me._CenaOpt = value
				Me.SendPropertyChanged("CenaOpt")
				Me.OnCenaOptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mena", DbType:="NVarChar(3)")>  _
	Public Property Mena() As String
		Get
			Return Me._Mena
		End Get
		Set
			If (String.Equals(Me._Mena, value) = false) Then
				Me.OnMenaChanging(value)
				Me.SendPropertyChanging
				Me._Mena = value
				Me.SendPropertyChanged("Mena")
				Me.OnMenaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optio4", DbType:="NVarChar(15)")>  _
	Public Property Optio4() As String
		Get
			Return Me._Optio4
		End Get
		Set
			If (String.Equals(Me._Optio4, value) = false) Then
				Me.OnOptio4Changing(value)
				Me.SendPropertyChanging
				Me._Optio4 = value
				Me.SendPropertyChanged("Optio4")
				Me.OnOptio4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optio5", DbType:="NVarChar(15)")>  _
	Public Property Optio5() As String
		Get
			Return Me._Optio5
		End Get
		Set
			If (String.Equals(Me._Optio5, value) = false) Then
				Me.OnOptio5Changing(value)
				Me.SendPropertyChanging
				Me._Optio5 = value
				Me.SendPropertyChanged("Optio5")
				Me.OnOptio5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="ownCheck", Storage:="_OwnCheck", DbType:="NVarChar(15)")>  _
	Public Property OwnCheck() As String
		Get
			Return Me._OwnCheck
		End Get
		Set
			If (String.Equals(Me._OwnCheck, value) = false) Then
				Me.OnOwnCheckChanging(value)
				Me.SendPropertyChanging
				Me._OwnCheck = value
				Me.SendPropertyChanged("OwnCheck")
				Me.OnOwnCheckChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit NOT NULL")>  _
	Public Property Active() As Boolean
		Get
			Return Me._Active
		End Get
		Set
			If ((Me._Active = value)  _
						= false) Then
				Me.OnActiveChanging(value)
				Me.SendPropertyChanging
				Me._Active = value
				Me.SendPropertyChanged("Active")
				Me.OnActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optio1b", DbType:="Bit NOT NULL")>  _
	Public Property Optio1b() As Boolean
		Get
			Return Me._Optio1b
		End Get
		Set
			If ((Me._Optio1b = value)  _
						= false) Then
				Me.OnOptio1bChanging(value)
				Me.SendPropertyChanging
				Me._Optio1b = value
				Me.SendPropertyChanged("Optio1b")
				Me.OnOptio1bChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optio2b", DbType:="Bit NOT NULL")>  _
	Public Property Optio2b() As Boolean
		Get
			Return Me._Optio2b
		End Get
		Set
			If ((Me._Optio2b = value)  _
						= false) Then
				Me.OnOptio2bChanging(value)
				Me.SendPropertyChanging
				Me._Optio2b = value
				Me.SendPropertyChanged("Optio2b")
				Me.OnOptio2bChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optio3b", DbType:="Bit NOT NULL")>  _
	Public Property Optio3b() As Boolean
		Get
			Return Me._Optio3b
		End Get
		Set
			If ((Me._Optio3b = value)  _
						= false) Then
				Me.OnOptio3bChanging(value)
				Me.SendPropertyChanging
				Me._Optio3b = value
				Me.SendPropertyChanged("Optio3b")
				Me.OnOptio3bChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optio4b", DbType:="Bit NOT NULL")>  _
	Public Property Optio4b() As Boolean
		Get
			Return Me._Optio4b
		End Get
		Set
			If ((Me._Optio4b = value)  _
						= false) Then
				Me.OnOptio4bChanging(value)
				Me.SendPropertyChanging
				Me._Optio4b = value
				Me.SendPropertyChanged("Optio4b")
				Me.OnOptio4bChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optio5b", DbType:="Bit NOT NULL")>  _
	Public Property Optio5b() As Boolean
		Get
			Return Me._Optio5b
		End Get
		Set
			If ((Me._Optio5b = value)  _
						= false) Then
				Me.OnOptio5bChanging(value)
				Me.SendPropertyChanging
				Me._Optio5b = value
				Me.SendPropertyChanged("Optio5b")
				Me.OnOptio5bChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class Security
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Vytvoreno As Date
	
	Private _Upraveno As Date
	
	Private _Build As Integer
	
	Private _Mods As Integer
	
	Private _Verze As Integer
	
	Private _Pass As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnVytvorenoChanging(value As Date)
    End Sub
    Partial Private Sub OnVytvorenoChanged()
    End Sub
    Partial Private Sub OnUpravenoChanging(value As Date)
    End Sub
    Partial Private Sub OnUpravenoChanged()
    End Sub
    Partial Private Sub OnBuildChanging(value As Integer)
    End Sub
    Partial Private Sub OnBuildChanged()
    End Sub
    Partial Private Sub OnModsChanging(value As Integer)
    End Sub
    Partial Private Sub OnModsChanged()
    End Sub
    Partial Private Sub OnVerzeChanging(value As Integer)
    End Sub
    Partial Private Sub OnVerzeChanged()
    End Sub
    Partial Private Sub OnPassChanging(value As String)
    End Sub
    Partial Private Sub OnPassChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vytvoreno", DbType:="DateTime NOT NULL")>  _
	Public Property Vytvoreno() As Date
		Get
			Return Me._Vytvoreno
		End Get
		Set
			If ((Me._Vytvoreno = value)  _
						= false) Then
				Me.OnVytvorenoChanging(value)
				Me.SendPropertyChanging
				Me._Vytvoreno = value
				Me.SendPropertyChanged("Vytvoreno")
				Me.OnVytvorenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Upraveno", DbType:="DateTime NOT NULL")>  _
	Public Property Upraveno() As Date
		Get
			Return Me._Upraveno
		End Get
		Set
			If ((Me._Upraveno = value)  _
						= false) Then
				Me.OnUpravenoChanging(value)
				Me.SendPropertyChanging
				Me._Upraveno = value
				Me.SendPropertyChanged("Upraveno")
				Me.OnUpravenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Build", DbType:="Int NOT NULL")>  _
	Public Property Build() As Integer
		Get
			Return Me._Build
		End Get
		Set
			If ((Me._Build = value)  _
						= false) Then
				Me.OnBuildChanging(value)
				Me.SendPropertyChanging
				Me._Build = value
				Me.SendPropertyChanged("Build")
				Me.OnBuildChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mods", DbType:="Int NOT NULL")>  _
	Public Property Mods() As Integer
		Get
			Return Me._Mods
		End Get
		Set
			If ((Me._Mods = value)  _
						= false) Then
				Me.OnModsChanging(value)
				Me.SendPropertyChanging
				Me._Mods = value
				Me.SendPropertyChanged("Mods")
				Me.OnModsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Verze", DbType:="Int NOT NULL")>  _
	Public Property Verze() As Integer
		Get
			Return Me._Verze
		End Get
		Set
			If ((Me._Verze = value)  _
						= false) Then
				Me.OnVerzeChanging(value)
				Me.SendPropertyChanging
				Me._Verze = value
				Me.SendPropertyChanged("Verze")
				Me.OnVerzeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pass", DbType:="NVarChar(5)")>  _
	Public Property Pass() As String
		Get
			Return Me._Pass
		End Get
		Set
			If (String.Equals(Me._Pass, value) = false) Then
				Me.OnPassChanging(value)
				Me.SendPropertyChanging
				Me._Pass = value
				Me.SendPropertyChanged("Pass")
				Me.OnPassChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class Zaruky
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Oznacil As Boolean
	
	Private _Vec As String
	
	Private _SerNum As String
	
	Private _DatPoc As System.Nullable(Of Date)
	
	Private _DatKon As System.Nullable(Of Date)
	
	Private _DatOpt As System.Nullable(Of Date)
	
	Private _Dodavatel As String
	
	Private _Faktura As String
	
	Private _Cena As Decimal
	
	Private _Optio1 As String
	
	Private _Optio2 As String
	
	Private _Optio3 As String
	
	Private _Upraveno As System.Nullable(Of Date)
	
	Private _Smazano As Boolean
	
	Private _Databaze As String
	
	Private _CenaOpt As Decimal
	
	Private _OwnID As Integer
	
	Private _Optio4 As String
	
	Private _Optio5 As String
	
	Private _OwnCheck As Boolean
	
	Private _NewID As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnOznacilChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOznacilChanged()
    End Sub
    Partial Private Sub OnVecChanging(value As String)
    End Sub
    Partial Private Sub OnVecChanged()
    End Sub
    Partial Private Sub OnSerNumChanging(value As String)
    End Sub
    Partial Private Sub OnSerNumChanged()
    End Sub
    Partial Private Sub OnDatPocChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDatPocChanged()
    End Sub
    Partial Private Sub OnDatKonChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDatKonChanged()
    End Sub
    Partial Private Sub OnDatOptChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDatOptChanged()
    End Sub
    Partial Private Sub OnDodavatelChanging(value As String)
    End Sub
    Partial Private Sub OnDodavatelChanged()
    End Sub
    Partial Private Sub OnFakturaChanging(value As String)
    End Sub
    Partial Private Sub OnFakturaChanged()
    End Sub
    Partial Private Sub OnCenaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCenaChanged()
    End Sub
    Partial Private Sub OnOptio1Changing(value As String)
    End Sub
    Partial Private Sub OnOptio1Changed()
    End Sub
    Partial Private Sub OnOptio2Changing(value As String)
    End Sub
    Partial Private Sub OnOptio2Changed()
    End Sub
    Partial Private Sub OnOptio3Changing(value As String)
    End Sub
    Partial Private Sub OnOptio3Changed()
    End Sub
    Partial Private Sub OnUpravenoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUpravenoChanged()
    End Sub
    Partial Private Sub OnSmazanoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSmazanoChanged()
    End Sub
    Partial Private Sub OnDatabazeChanging(value As String)
    End Sub
    Partial Private Sub OnDatabazeChanged()
    End Sub
    Partial Private Sub OnCenaOptChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCenaOptChanged()
    End Sub
    Partial Private Sub OnOwnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnOwnIDChanged()
    End Sub
    Partial Private Sub OnOptio4Changing(value As String)
    End Sub
    Partial Private Sub OnOptio4Changed()
    End Sub
    Partial Private Sub OnOptio5Changing(value As String)
    End Sub
    Partial Private Sub OnOptio5Changed()
    End Sub
    Partial Private Sub OnOwnCheckChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOwnCheckChanged()
    End Sub
    Partial Private Sub OnNewIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnNewIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Oznacil", DbType:="Bit NOT NULL")>  _
	Public Property Oznacil() As Boolean
		Get
			Return Me._Oznacil
		End Get
		Set
			If ((Me._Oznacil = value)  _
						= false) Then
				Me.OnOznacilChanging(value)
				Me.SendPropertyChanging
				Me._Oznacil = value
				Me.SendPropertyChanged("Oznacil")
				Me.OnOznacilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vec", DbType:="NVarChar(80)")>  _
	Public Property Vec() As String
		Get
			Return Me._Vec
		End Get
		Set
			If (String.Equals(Me._Vec, value) = false) Then
				Me.OnVecChanging(value)
				Me.SendPropertyChanging
				Me._Vec = value
				Me.SendPropertyChanged("Vec")
				Me.OnVecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SerNum", DbType:="NVarChar(30)")>  _
	Public Property SerNum() As String
		Get
			Return Me._SerNum
		End Get
		Set
			If (String.Equals(Me._SerNum, value) = false) Then
				Me.OnSerNumChanging(value)
				Me.SendPropertyChanging
				Me._SerNum = value
				Me.SendPropertyChanged("SerNum")
				Me.OnSerNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatPoc", DbType:="DateTime")>  _
	Public Property DatPoc() As System.Nullable(Of Date)
		Get
			Return Me._DatPoc
		End Get
		Set
			If (Me._DatPoc.Equals(value) = false) Then
				Me.OnDatPocChanging(value)
				Me.SendPropertyChanging
				Me._DatPoc = value
				Me.SendPropertyChanged("DatPoc")
				Me.OnDatPocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatKon", DbType:="DateTime")>  _
	Public Property DatKon() As System.Nullable(Of Date)
		Get
			Return Me._DatKon
		End Get
		Set
			If (Me._DatKon.Equals(value) = false) Then
				Me.OnDatKonChanging(value)
				Me.SendPropertyChanging
				Me._DatKon = value
				Me.SendPropertyChanged("DatKon")
				Me.OnDatKonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatOpt", DbType:="DateTime")>  _
	Public Property DatOpt() As System.Nullable(Of Date)
		Get
			Return Me._DatOpt
		End Get
		Set
			If (Me._DatOpt.Equals(value) = false) Then
				Me.OnDatOptChanging(value)
				Me.SendPropertyChanging
				Me._DatOpt = value
				Me.SendPropertyChanged("DatOpt")
				Me.OnDatOptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dodavatel", DbType:="NVarChar(80)")>  _
	Public Property Dodavatel() As String
		Get
			Return Me._Dodavatel
		End Get
		Set
			If (String.Equals(Me._Dodavatel, value) = false) Then
				Me.OnDodavatelChanging(value)
				Me.SendPropertyChanging
				Me._Dodavatel = value
				Me.SendPropertyChanged("Dodavatel")
				Me.OnDodavatelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Faktura", DbType:="NVarChar(30)")>  _
	Public Property Faktura() As String
		Get
			Return Me._Faktura
		End Get
		Set
			If (String.Equals(Me._Faktura, value) = false) Then
				Me.OnFakturaChanging(value)
				Me.SendPropertyChanging
				Me._Faktura = value
				Me.SendPropertyChanged("Faktura")
				Me.OnFakturaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cena", DbType:="Money NOT NULL")>  _
	Public Property Cena() As Decimal
		Get
			Return Me._Cena
		End Get
		Set
			If ((Me._Cena = value)  _
						= false) Then
				Me.OnCenaChanging(value)
				Me.SendPropertyChanging
				Me._Cena = value
				Me.SendPropertyChanged("Cena")
				Me.OnCenaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optio1", DbType:="NVarChar(100)")>  _
	Public Property Optio1() As String
		Get
			Return Me._Optio1
		End Get
		Set
			If (String.Equals(Me._Optio1, value) = false) Then
				Me.OnOptio1Changing(value)
				Me.SendPropertyChanging
				Me._Optio1 = value
				Me.SendPropertyChanged("Optio1")
				Me.OnOptio1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optio2", DbType:="NVarChar(30)")>  _
	Public Property Optio2() As String
		Get
			Return Me._Optio2
		End Get
		Set
			If (String.Equals(Me._Optio2, value) = false) Then
				Me.OnOptio2Changing(value)
				Me.SendPropertyChanging
				Me._Optio2 = value
				Me.SendPropertyChanged("Optio2")
				Me.OnOptio2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optio3", DbType:="NVarChar(30)")>  _
	Public Property Optio3() As String
		Get
			Return Me._Optio3
		End Get
		Set
			If (String.Equals(Me._Optio3, value) = false) Then
				Me.OnOptio3Changing(value)
				Me.SendPropertyChanging
				Me._Optio3 = value
				Me.SendPropertyChanged("Optio3")
				Me.OnOptio3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Upraveno", DbType:="DateTime")>  _
	Public Property Upraveno() As System.Nullable(Of Date)
		Get
			Return Me._Upraveno
		End Get
		Set
			If (Me._Upraveno.Equals(value) = false) Then
				Me.OnUpravenoChanging(value)
				Me.SendPropertyChanging
				Me._Upraveno = value
				Me.SendPropertyChanged("Upraveno")
				Me.OnUpravenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Smazano", DbType:="Bit NOT NULL")>  _
	Public Property Smazano() As Boolean
		Get
			Return Me._Smazano
		End Get
		Set
			If ((Me._Smazano = value)  _
						= false) Then
				Me.OnSmazanoChanging(value)
				Me.SendPropertyChanging
				Me._Smazano = value
				Me.SendPropertyChanged("Smazano")
				Me.OnSmazanoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Databaze", DbType:="NVarChar(20)")>  _
	Public Property Databaze() As String
		Get
			Return Me._Databaze
		End Get
		Set
			If (String.Equals(Me._Databaze, value) = false) Then
				Me.OnDatabazeChanging(value)
				Me.SendPropertyChanging
				Me._Databaze = value
				Me.SendPropertyChanged("Databaze")
				Me.OnDatabazeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CenaOpt", DbType:="Money NOT NULL")>  _
	Public Property CenaOpt() As Decimal
		Get
			Return Me._CenaOpt
		End Get
		Set
			If ((Me._CenaOpt = value)  _
						= false) Then
				Me.OnCenaOptChanging(value)
				Me.SendPropertyChanging
				Me._CenaOpt = value
				Me.SendPropertyChanged("CenaOpt")
				Me.OnCenaOptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="ownID", Storage:="_OwnID", DbType:="Int NOT NULL")>  _
	Public Property OwnID() As Integer
		Get
			Return Me._OwnID
		End Get
		Set
			If ((Me._OwnID = value)  _
						= false) Then
				Me.OnOwnIDChanging(value)
				Me.SendPropertyChanging
				Me._OwnID = value
				Me.SendPropertyChanged("OwnID")
				Me.OnOwnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optio4", DbType:="NVarChar(30)")>  _
	Public Property Optio4() As String
		Get
			Return Me._Optio4
		End Get
		Set
			If (String.Equals(Me._Optio4, value) = false) Then
				Me.OnOptio4Changing(value)
				Me.SendPropertyChanging
				Me._Optio4 = value
				Me.SendPropertyChanged("Optio4")
				Me.OnOptio4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Optio5", DbType:="NVarChar(30)")>  _
	Public Property Optio5() As String
		Get
			Return Me._Optio5
		End Get
		Set
			If (String.Equals(Me._Optio5, value) = false) Then
				Me.OnOptio5Changing(value)
				Me.SendPropertyChanging
				Me._Optio5 = value
				Me.SendPropertyChanged("Optio5")
				Me.OnOptio5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="ownCheck", Storage:="_OwnCheck", DbType:="Bit NOT NULL")>  _
	Public Property OwnCheck() As Boolean
		Get
			Return Me._OwnCheck
		End Get
		Set
			If ((Me._OwnCheck = value)  _
						= false) Then
				Me.OnOwnCheckChanging(value)
				Me.SendPropertyChanging
				Me._OwnCheck = value
				Me.SendPropertyChanged("OwnCheck")
				Me.OnOwnCheckChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="newID", Storage:="_NewID", DbType:="Int NOT NULL")>  _
	Public Property NewID() As Integer
		Get
			Return Me._NewID
		End Get
		Set
			If ((Me._NewID = value)  _
						= false) Then
				Me.OnNewIDChanging(value)
				Me.SendPropertyChanging
				Me._NewID = value
				Me.SendPropertyChanged("NewID")
				Me.OnNewIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
